{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAKA,QCLJO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAa,IAAD,EAEXd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAkBrC,OAXAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACMH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAI1B,CAACpB,IAEIqB,EDfsBK,CAAa1B,GAA/Ba,EAF2B,EAEhCN,KAAYa,EAFoB,EAEpBA,QAElB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEwBtBgB,EAlCO,WAAO,IAAD,EAGYzC,mBAAS,CAAC,cAHtB,mBAGjB0C,EAHiB,KAGL3C,EAHK,KAWxB,OACI,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGF,6BAEQ2C,EAAWnB,KAAI,SAACT,EAAS6B,GAAV,OACX,cAAC,EAAD,CAEI7B,SAAWA,GADLA,Y,MCtB9B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.751ad25b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(''); \r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2 ){\r\n            setCategories(cat => [inputValue,...cat]);\r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange } \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=t4DGqtUnoqHY5pJWGlFnMbzcQSxLaTUa`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    // console.log(gifs);\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    \r\n    // console.log(id, title, url );\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n            <img src={ url } alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n   const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }   \r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category) \r\n        .then(imgs =>{\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n            });\r\n\r\n    },[category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n    \r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    // const handleAdd = () =>{\r\n    //     setCategories(['Once Piece',...categories]);\r\n    //     // setCategories(cat => ['Once Piece',...categories]);\r\n    // }\r\n\r\n\r\n    return(\r\n        <>\r\n          <h2>GiftExpertApp</h2>\r\n          <AddCategory setCategories={setCategories}/>\r\n          <hr />\r\n\r\n\r\n        <ol>\r\n            {\r\n                categories.map((category,i)=> (\r\n                    <GiftGrid \r\n                        key={ category } \r\n                        category={ category }/>   \r\n                ))\r\n            }\r\n        </ol>\r\n\r\n\r\n        </>\r\n    )\r\n   \r\n}\r\n\r\nexport default GiftExpertApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}